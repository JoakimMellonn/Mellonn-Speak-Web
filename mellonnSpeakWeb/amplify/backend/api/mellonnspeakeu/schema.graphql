type Purchase @model @auth(rules: [{allow: private}]) {
  id: ID!
  date: AWSDateTime!
  seconds: Float!
  referrerID: ID @index(name: "byReferrer")
}

type Referrer @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  members: Int!
  purchases: Int!
  seconds: Float!
  promotions: [Promotion!] @hasMany(indexName: "byReferrer", fields: ["id"])
  discount: Float!
  isGroup: Boolean!
  Purchases: [Purchase] @hasMany(indexName: "byReferrer", fields: ["id"])
}

enum PromotionType {
  REFERRER
  REFERGROUP
  BENEFIT
  DEV
  PERIODS
}

type Promotion @model @auth(rules: [{allow: public}]) {
  id: ID!
  type: PromotionType!
  code: String!
  date: AWSDate
  freePeriods: Int!
  uses: Int!
  referrerID: ID @index(name: "byReferrer")
}

type Settings @model @auth(rules: [{allow: owner}]) {
  id: ID!
  themeMode: String!
  languageCode: String!
  jumpSeconds: Int!
  primaryCard: String
}

type Version @model @auth(rules: [{allow: private}]) {
  id: ID!
  date: AWSDateTime!
  recordingID: ID! @index(name: "byRecording")
  editType: String!
}

type Recording @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String!
  date: AWSDateTime
  description: String
  fileKey: String
  fileName: String
  fileUrl: String
  speakerCount: Int!
  languageCode: String
  versions: [Version] @hasMany(indexName: "byRecording", fields: ["id"])
  interviewers: [String]
  labels: [String]
}
